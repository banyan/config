[user]
	name  = Kohei Hasegawa
	email = ameutau@gmail.com
[core]
    excludesfile      = ~/.gitignore
    pager             = less -r
    editor            = /usr/bin/vim
	precomposeunicode = true
    attributesfile    = ~/.gitattributes
	ignorecase        = false
	quotepath         = false
[pager]
    log  = diff-highlight | less
    show = diff-highlight | less
    diff = diff-highlight | less
[color]
    diff        = auto
    status      = auto
    branch      = auto
    interactive = auto
[color "branch"]
    current = yellow reverse
    local   = yellow
    remote  = green
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old  = red bold
    new  = green bold
[color "status"]
    added     = yellow
    changed   = green
    untracked = cyan
[advice]
    pushNonFastForward = false
    statusHints        = false
    commitBeforeMerge  = false
    resolveConflict    = false
    implicitIdentity   = false
    detachedHead       = false
[alias]
    ci             = commit -v
    amend          = commit --amend -C HEAD
    yo             = !git commit -m '.'
    co             = checkout
    st             = status -sb
    d              = diff
    di             = diff
    dic            = diff --cached
    ls             = ls-files
    b              = branch --color --sort=-authordate
    sh             = !git-sh
    dm             = !git branch --merged | grep -v \\* | xargs -I % git branch -d %
    dmr            = fetch -n --prune origin refs/heads/*:refs/remotes/origin/* refs/tags/*:refs/tags/origin/*
    p              = !git push origin `git rev-parse --abbrev-ref HEAD`
    pl             = !git pull origin `git rev-parse --abbrev-ref HEAD`
    f              = fetch
    default-branch = "!sh -c \"git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@'\""
    bc             = !git commit -m \"`git rev-parse --abbrev-ref HEAD | ruby -e \"print STDIN.read.strip.gsub('-', ' ').capitalize\"`\"
    cb             = !git tb
    fpr            = "!f() { git fetch origin pull/$1/head:pr/$1; }; f"
    sha            = !git log --pretty=format:'%h' -n 1
    compare        = "!function git_is_ancestor() { if git merge-base --is-ancestor $1 $2; then echo \"$1 is ancestor of $2\" ; elif git merge-base --is-ancestor $2 $1 ; then echo \"$2 is ancestor of $1\" ; else echo \"No relation between $1 and $2\" ; fi } ; git_is_ancestor $1 $2"
[url "https://"]
	insteadOf = git://
[url "git@github.com:"]
    insteadOf = https://github.com/
[include]
    path = ~/.gitconfig.local
[fetch]
	prune = true
[rebase]
	autostash = true
[stash]
	showPatch = true
[push]
	default = simple
[pull]
	default = simple
	rebase  = true
[merge]
	log = true
[tig "bind"]
    generic = g move-first-line
    generic = G move-last-line
