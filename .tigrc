set main-view = line-number:yes id:no date:default author:full commit-title:yes,graph,refs,overflow=no

set horizontal-scroll = 33%
set split-view-height = 70%
set line-graphics     = utf-8
set tab-size          = 4
set commit-order = default

# bind
bind main    G  none # To override the default keybinding bound to G: https://github.com/jonas/tig/issues/351#issuecomment-67722550
bind generic G  move-last-line
bind generic r refresh

# open commit at github
bind main o !@gh browse -- %(commit)
bind diff o !@gh browse -- %(commit)
bind log  o !@gh browse -- %(commit)

# http://sue445.hatenablog.com/entry/2014/08/07/015811
bind main R !<git rebase -i %(commit)
bind diff R !<git rebase -i %(commit)

# ^c to checkout
bind main C none # To override the default keybinding bound to C
bind main C !<git checkout %(commit)
bind diff C !<git checkout %(commit)
bind log  C !<git checkout %(commit)

# https://github.com/banyan/git_modified_files
# Open files in vim
bind main K !<sh -c "vim -p $(git modified_files %(commit))"
bind diff K !<sh -c "vim -p $(git modified_files %(commit))"
bind log  K !<sh -c "vim -p $(git modified_files %(commit))"

# https://github.com/banyan/git-cb
# Use commit message as branch name
bind main J !<git cb %(commit)
bind diff J !<git cb %(commit)
bind log  J !<git cb %(commit)

# Open files in vscode
bind main V !<sh -c "code $(git modified_files %(commit))"
bind diff V !<sh -c "code $(git modified_files %(commit))"
bind log  V !<sh -c "code $(git modified_files %(commit))"

# Send commit diff to Claude with custom prompt
bind main c !<sh -c "read -p 'Enter instruction for Claude: ' instruction && git show %(commit) | claude \"$instruction\""
bind diff c !<sh -c "read -p 'Enter instruction for Claude: ' instruction && git show %(commit) | claude \"$instruction\""
bind log  c !<sh -c "read -p 'Enter instruction for Claude: ' instruction && git show %(commit) | claude \"$instruction\""

set blame-view = author:full date:default id:yes,color line-number:yes,interval=1 text

bind generic 9 !@sh -c "git rev-parse --short %(commit) | pbcopy"

# H for git reset --hard
bind main H !<git reset --hard %(commit)
bind diff H !<git reset --hard %(commit)
bind log  H !<git reset --hard %(commit)

# S for git reset --soft
bind main S !<git reset --soft %(commit)
bind diff S !<git reset --soft %(commit)
bind log  S !<git reset --soft %(commit)
